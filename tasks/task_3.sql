CREATE SCHEMA IF NOT EXISTS LOYALTY_PROGRAM;

SET
	SEARCH_PATH = LOYALTY_PROGRAM,
	PUBLIC;

DROP TABLE IF EXISTS USER_INFO CASCADE;

CREATE TABLE USER_INFO (
	USER_ID TEXT PRIMARY KEY,
	NAME TEXT NOT NULL,
	EMAIL TEXT UNIQUE CONSTRAINT CHECK_EMAIL CHECK (EMAIL ~~ '%@%.%'::TEXT),
	PHONE TEXT NOT NULL UNIQUE CONSTRAINT CHECK_PHONE CHECK (LENGTH(PHONE) = 11)
);

DROP TABLE IF EXISTS ACCOUNT_INFO CASCADE;

CREATE TABLE ACCOUNT_INFO (
	ACCOUNT_NUMBER TEXT PRIMARY KEY,
	BALANCE NUMERIC(100, 5) CONSTRAINT CHECK_BALANCE CHECK (BALANCE >= 0),
	CREATED_AT DATE NOT NULL,
	UPDATED_AT DATE NOT NULL
);

DROP TABLE IF EXISTS USER_ACCOUNT CASCADE;

CREATE TABLE USER_ACCOUNT (
	ACCOUNT_ID TEXT PRIMARY KEY,
	USER_ID TEXT NOT NULL REFERENCES USER_INFO (USER_ID),
	ACCOUNT_NUMBER TEXT NOT NULL REFERENCES ACCOUNT_INFO (ACCOUNT_NUMBER),
	IS_ACTIVE BOOLEAN NOT NULL DEFAULT FALSE,
	CREATED_AT DATE NOT NULL
);

DROP TABLE IF EXISTS PROMO CASCADE;

CREATE TABLE PROMO (
	PROMO_ID TEXT PRIMARY KEY,
	DISCOUNT NUMERIC(8, 5) CONSTRAINT CHECK_DISCOUNT CHECK (DISCOUNT >= 0),
	NAME TEXT NOT NULL,
	TYPE TEXT NOT NULL CONSTRAINT CHECK_TYPE CHECK (
		TYPE ~~ 'absolute'::TEXT
		OR TYPE ~~ 'relative'::TEXT
	)
);

DROP TABLE IF EXISTS REGION_INFO CASCADE;

CREATE TABLE REGION_INFO (
	REGION_ID INTEGER PRIMARY KEY,
	TAX NUMERIC(8, 5) CONSTRAINT CHECK_TAX CHECK (TAX >= 0),
	ISO_3 TEXT NOT NULL
);

DROP TABLE IF EXISTS MERCHANT_INFO CASCADE;

CREATE TABLE MERCHANT_INFO (
	MERCHANT_ID TEXT PRIMARY KEY,
	NAME TEXT NOT NULL,
	REGION_ID INTEGER NOT NULL REFERENCES REGION_INFO (REGION_ID)
);

DROP TABLE IF EXISTS MERCHANT_ACCOUNT_HISTORY CASCADE;

CREATE TABLE MERCHANT_ACCOUNT_HISTORY (
	ACCOUNT_ID TEXT PRIMARY KEY,
	MERCHANT_ID TEXT NOT NULL REFERENCES MERCHANT_INFO (MERCHANT_ID),
	EVENT_TYPE TEXT NOT NULL,
	IS_ACTIVE BOOLEAN NOT NULL DEFAULT FALSE,
	UPDATED_AT DATE NOT NULL
);

DROP TABLE IF EXISTS MERCHANT_ACCOUNT CASCADE;

CREATE TABLE MERCHANT_ACCOUNT (
	ACCOUNT_ID TEXT PRIMARY KEY,
	MERCHANT_ID TEXT NOT NULL REFERENCES MERCHANT_INFO (MERCHANT_ID),
	ACCOUNT_NUMBER TEXT NOT NULL REFERENCES ACCOUNT_INFO (ACCOUNT_NUMBER),
	IS_ACTIVE BOOLEAN NOT NULL DEFAULT FALSE
);

DROP TABLE IF EXISTS CURRENCY CASCADE;

CREATE TABLE CURRENCY (
	CURRENCY_ID TEXT PRIMARY KEY,
	NAME TEXT NOT NULL,
	EXCHANGE_RATE NUMERIC(8, 5) CONSTRAINT CHECK_EXCHANGE_RATE CHECK (EXCHANGE_RATE > 0)
);

DROP TABLE IF EXISTS TRANSACTION CASCADE;

CREATE TABLE TRANSACTION (
	TRANSACTION_ID TEXT PRIMARY KEY,
	USER_ACCOUNT_ID TEXT NOT NULL REFERENCES USER_ACCOUNT (ACCOUNT_ID),
	MERCHANT_ACCOUNT_ID TEXT NOT NULL REFERENCES MERCHANT_ACCOUNT (ACCOUNT_ID),
	CURRENCY_ID TEXT NOT NULL REFERENCES CURRENCY (CURRENCY_ID),
	AMOUNT NUMERIC(99, 5) CONSTRAINT CHECK_AMOUNT CHECK (AMOUNT >= 0),
	TIMESTAMP DATE NOT NULL,
	STATUS TEXT NOT NULL,
	AMOUNT_BEFORE_PROMOS NUMERIC(99, 5) CONSTRAINT CHECK_AMOUNT_B_PROMOS CHECK (AMOUNT_BEFORE_PROMOS >= 0)
);

DROP TABLE IF EXISTS APPLIED_PROMOS CASCADE;

CREATE TABLE APPLIED_PROMOS (
	TRANSACTION_ID TEXT REFERENCES TRANSACTION (TRANSACTION_ID),
	PROMO_ID TEXT REFERENCES PROMO (PROMO_ID)
);
CREATE OR REPLACE FUNCTION update_user_balance()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE ACCOUNT_INFO
    SET BALANCE = BALANCE - NEW.AMOUNT,
        UPDATED_AT = NOW()
    WHERE ACCOUNT_NUMBER = (
        SELECT ua.ACCOUNT_NUMBER
        FROM USER_ACCOUNT ua
        WHERE ua.ACCOUNT_ID = NEW.USER_ACCOUNT_ID
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_update_user_balance
AFTER INSERT ON TRANSACTION
FOR EACH ROW
EXECUTE PROCEDURE update_user_balance();


CREATE OR REPLACE FUNCTION update_merchant_balance()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE ACCOUNT_INFO
    SET BALANCE = BALANCE + NEW.AMOUNT,
        UPDATED_AT = NOW()
    WHERE ACCOUNT_NUMBER = (
        SELECT ma.ACCOUNT_NUMBER
        FROM MERCHANT_ACCOUNT ma
        WHERE ma.ACCOUNT_ID = NEW.MERCHANT_ACCOUNT_ID
    );
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_update_merchant_balance
AFTER INSERT ON TRANSACTION
FOR EACH ROW
EXECUTE PROCEDURE update_merchant_balance();

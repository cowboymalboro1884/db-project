CREATE SCHEMA IF NOT EXISTS LOYALTY_VIEWS;

CREATE VIEW LOYALTY_VIEWS.VIEW_USER_INFO AS
SELECT 
    SUBSTRING(USER_ID, 1, 5) || '*****' AS USER_ID_MASKED,
    NAME, 
    SUBSTRING(EMAIL, 1, 2) || '****@' || SUBSTRING(EMAIL, POSITION('@' IN EMAIL) + 1, 2) || '***' AS EMAIL_MASKED,
    SUBSTRING(PHONE, 1, 4) || '*******' AS PHONE_MASKED
FROM LOYALTY_PROGRAM.USER_INFO;

-- Удаляем технические поля 'UPDATED_AT'
CREATE VIEW LOYALTY_VIEWS.VIEW_ACCOUNT_INFO AS
SELECT 
    ACCOUNT_NUMBER,
    BALANCE,
    CREATED_AT
FROM LOYALTY_PROGRAM.ACCOUNT_INFO;

-- Маскируем USER_ID и убираем технические поля
CREATE VIEW LOYALTY_VIEWS.VIEW_USER_ACCOUNT AS
SELECT 
    SUBSTRING(USER_ID, 1, 5) || '*****' AS USER_ID_MASKED, 
    ACCOUNT_NUMBER,
    IS_ACTIVE
FROM LOYALTY_PROGRAM.USER_ACCOUNT;

CREATE VIEW LOYALTY_VIEWS.VIEW_PROMO AS
SELECT 
    PROMO_ID,
    DISCOUNT,
    NAME,
    TYPE
FROM LOYALTY_PROGRAM.PROMO;

CREATE VIEW LOYALTY_VIEWS.VIEW_REGION_INFO AS
SELECT 
    REGION_ID,
    TAX,
    ISO_3
FROM LOYALTY_PROGRAM.REGION_INFO;

CREATE VIEW LOYALTY_VIEWS.VIEW_MERCHANT_INFO AS
SELECT 
    MERCHANT_ID,
    NAME,
    REGION_ID
FROM LOYALTY_PROGRAM.MERCHANT_INFO;

-- Убираем технические поля
CREATE VIEW LOYALTY_VIEWS.VIEW_MERCHANT_ACCOUNT_HISTORY AS
SELECT 
    ACCOUNT_ID,
    MERCHANT_ID,
    EVENT_TYPE,
    IS_ACTIVE
FROM LOYALTY_PROGRAM.MERCHANT_ACCOUNT_HISTORY;

CREATE VIEW LOYALTY_VIEWS.VIEW_MERCHANT_ACCOUNT AS
SELECT 
    ACCOUNT_ID,
    MERCHANT_ID,
    SUBSTRING(ACCOUNT_NUMBER, 1, 4) || '********' AS ACCOUNT_NUMBER_MASKED,
    IS_ACTIVE
FROM LOYALTY_PROGRAM.MERCHANT_ACCOUNT;

CREATE VIEW LOYALTY_VIEWS.VIEW_CURRENCY AS
SELECT 
    CURRENCY_ID,
    NAME,
    EXCHANGE_RATE
FROM LOYALTY_PROGRAM.CURRENCY;

-- Убираем поле версионности и маскирование отсутствует, так как здесь нет данных с персональной информацией
CREATE VIEW LOYALTY_VIEWS.VIEW_TRANSACTION AS
SELECT 
    TRANSACTION_ID,
    AMOUNT,
    TIMESTAMP,
    STATUS,
    AMOUNT_BEFORE_PROMOS
FROM LOYALTY_PROGRAM.TRANSACTION;

CREATE VIEW LOYALTY_VIEWS.VIEW_APPLIED_PROMOS AS
SELECT 
    TRANSACTION_ID, 
    PROMO_ID
FROM LOYALTY_PROGRAM.APPLIED_PROMOS;
